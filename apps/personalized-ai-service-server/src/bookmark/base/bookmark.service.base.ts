/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bookmark as PrismaBookmark } from "@prisma/client";

export class BookmarkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BookmarkCountArgs, "select">): Promise<number> {
    return this.prisma.bookmark.count(args);
  }

  async bookmarks(
    args: Prisma.BookmarkFindManyArgs
  ): Promise<PrismaBookmark[]> {
    return this.prisma.bookmark.findMany(args);
  }
  async bookmark(
    args: Prisma.BookmarkFindUniqueArgs
  ): Promise<PrismaBookmark | null> {
    return this.prisma.bookmark.findUnique(args);
  }
  async createBookmark(
    args: Prisma.BookmarkCreateArgs
  ): Promise<PrismaBookmark> {
    return this.prisma.bookmark.create(args);
  }
  async updateBookmark(
    args: Prisma.BookmarkUpdateArgs
  ): Promise<PrismaBookmark> {
    return this.prisma.bookmark.update(args);
  }
  async deleteBookmark(
    args: Prisma.BookmarkDeleteArgs
  ): Promise<PrismaBookmark> {
    return this.prisma.bookmark.delete(args);
  }
}
