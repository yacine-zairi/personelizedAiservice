/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Segment as PrismaSegment } from "@prisma/client";

export class SegmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SegmentCountArgs, "select">): Promise<number> {
    return this.prisma.segment.count(args);
  }

  async segments(args: Prisma.SegmentFindManyArgs): Promise<PrismaSegment[]> {
    return this.prisma.segment.findMany(args);
  }
  async segment(
    args: Prisma.SegmentFindUniqueArgs
  ): Promise<PrismaSegment | null> {
    return this.prisma.segment.findUnique(args);
  }
  async createSegment(args: Prisma.SegmentCreateArgs): Promise<PrismaSegment> {
    return this.prisma.segment.create(args);
  }
  async updateSegment(args: Prisma.SegmentUpdateArgs): Promise<PrismaSegment> {
    return this.prisma.segment.update(args);
  }
  async deleteSegment(args: Prisma.SegmentDeleteArgs): Promise<PrismaSegment> {
    return this.prisma.segment.delete(args);
  }
}
